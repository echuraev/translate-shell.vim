Include: common.vader

Execute (common#history#AddTranslationToHistory: Check add functionality):
  let file = '/tmp/trans-add-translation-to-history.csv'
  call delete(file)
  let g:trans_save_history = 1
  let source = "Hello"
  let translation = "Здравствуйте"

  Log "common#history#AddTranslationToHistory: g:trans_history_file not defined"
  let ret = common#history#AddTranslationToHistory(source, translation)
  AssertEqual 'Error! g:trans_history_file not defined.', ret

  Log "common#history#AddTranslationToHistory: Add translation: '".source."' -> '".translation."' to file"
  let g:trans_history_file = file
  let ret = common#history#AddTranslationToHistory(source, translation)
  AssertEqual file, ret

  Log "common#history#AddTranslationToHistory: Add translation: '".source."' -> '".translation."' to file"
  let ret = common#history#AddTranslationToHistory(source, translation)
  AssertEqual file, ret

  Log "common#history#AddTranslationToHistory: g:trans_save_only_unique=1, '".source."' is already in file"
  let g:trans_save_only_unique = 1
  let ret = common#history#AddTranslationToHistory(source, translation)
  AssertEqual 'Error! Cannot add translation for ''Hello'' because it is already in '.file, ret

  Log "common#history#AddTranslationToHistory: g:trans_save_only_unique=2, append new translation of '".source."' to file"
  let g:trans_save_only_unique = 2
  let translation = "Привет!"
  let ret = common#history#AddTranslationToHistory(source, translation)
  AssertEqual file, ret

  execute 'edit' file

Expect text:
  Hello;Здравствуйте, Привет!
  Hello;Здравствуйте

Execute (common#history#AddTranslationToHistory: Check history file name):
  let file = '/tmp/trans-check-history-file-name'
  call delete(file)
  let g:trans_history_file = file
  let source = "Hello"
  let translation = "Здравствуйте"

  let args = "en:ru"
  call common#trans#GenerateCMD(args)

  Log "common#history#AddTranslationToHistory: Add translation: '".source."' -> '".translation."' to file g:trans_save_history = 0"
  let ret = common#history#AddTranslationToHistory(source, translation)
  AssertEqual '', ret

  Log "common#history#AddTranslationToHistory: Add translation: '".source."' -> '".translation."' to file g:trans_save_history = 1"
  let g:trans_save_history = 1
  let ret = common#history#AddTranslationToHistory(source, translation)
  AssertEqual file, ret

  Log "common#history#AddTranslationToHistory: Add translation: '".source."' -> '".translation."' to file g:trans_save_history = 2"
  let g:trans_save_history = 2
  let ret = common#history#AddTranslationToHistory(source, translation)
  AssertEqual file.'_en', ret

  Log "common#history#AddTranslationToHistory: Add translation: '".source."' -> '".translation."' to file g:trans_save_history = 3"
  let g:trans_save_history = 3
  let ret = common#history#AddTranslationToHistory(source, translation)
  AssertEqual file.'_en_ru', ret

  let args = "de:ru"
  call common#trans#GenerateCMD(args)

  let source = "Hallo"
  Log "common#history#AddTranslationToHistory: Add translation: '".source."' -> '".translation."' to file g:trans_save_history = 1"
  let g:trans_save_history = 1
  let ret = common#history#AddTranslationToHistory(source, translation)
  AssertEqual file, ret

  let source = "Hallo"
  Log "common#history#AddTranslationToHistory: Add translation: '".source."' -> '".translation."' to file g:trans_save_history = 2"
  let g:trans_save_history = 2
  let ret = common#history#AddTranslationToHistory(source, translation)
  AssertEqual file.'_de', ret

  Log "common#history#AddTranslationToHistory: Add translation: '".source."' -> '".translation."' to file g:trans_save_history = 3"
  let g:trans_save_history = 3
  let ret = common#history#AddTranslationToHistory(source, translation)
  AssertEqual file.'_de_ru', ret

Execute (common#history#AddTranslationToHistory: Check directory creation):
  let file = '/tmp/trans-history-'.strftime('%Y%m%d%H%M%S').'/trans-history-file.csv'
  call delete(file)
  let history_dir = fnamemodify(file, ":h")
  let g:trans_history_file = file
  let g:trans_save_history = 1
  let source = "Hello"
  let translation = "Здравствуйте"

  let args = "en:ru"
  call common#trans#GenerateCMD(args)

  Log "common#history#AddTranslationToHistory: Check that directory doesn't exist"
  AssertEqual 0, isdirectory(history_dir)
  let ret = common#history#AddTranslationToHistory(source, translation)
  Log "common#history#AddTranslationToHistory: Check that directory exists"
  AssertEqual 1, isdirectory(history_dir)

Execute (common#history#AddTranslationToHistory: Check audio downloading):
  let file = '/tmp/trans-check-audio-downloading'
  call delete(file)
  let g:trans_history_file = file
  let g:trans_history_format = '%s;%t;%as;%at'
  let g:trans_ignore_audio_for_langs = ['de']
  let g:trans_save_audio = 1
  let g:trans_save_history = 1
  let source = "Hello"
  let translation = "Здравствуйте"

  let args = "en:ru"
  call common#trans#GenerateCMD(args)

  Log "common#history#AddTranslationToHistory: Add translation: '".source."' -> '".translation."' to file g:trans_save_history = 1"
  let ret = common#history#AddTranslationToHistory(source, translation)
  AssertEqual file, ret
  let source_audio = "/tmp/Hello.mp3"
  let target_audio = "/tmp/Здравствуйте.mp3"
  AssertEqual 1, filereadable(source_audio)
  AssertEqual 1, filereadable(target_audio)

  let args = "de:en"
  call common#trans#GenerateCMD(args)
  let source = "Zeit"
  let translation = "Time"

  Log "common#history#AddTranslationToHistory: Add translation: '".source."' -> '".translation."' to file g:trans_save_history = 1"
  let ret = common#history#AddTranslationToHistory(source, translation)
  AssertEqual file, ret
  let source_audio = "/tmp/Zeit.mp3"
  let target_audio = "/tmp/Time.mp3"
  AssertEqual 0, filereadable(source_audio)
  AssertEqual 1, filereadable(target_audio)

  execute 'edit' file

Expect text:
  Hello;Здравствуйте;[sound:Hello.mp3];[sound:Здравствуйте.mp3]
  Zeit;Time;;[sound:Time.mp3]

Execute (common#history#AppendTextToFile: Check adding text to file):
  let file = '/tmp/trans-test-append'
  call delete(file)
  let text = "Test text"
  call common#history#AppendTextToFile(file, text)
  let text = "Hello world"
  call common#history#AppendTextToFile(file, text)
  let text = "translate"
  call common#history#AppendTextToFile(file, text)
  execute 'edit' file

Expect text:
  Test text
  Hello world
  translate

Execute (common#history#GetListOfHistoryFiles: Check list):
  let file = "/tmp/trans-get-list-of-files.csv"
  call delete(file)
  let g:trans_history_file = file

  let text = "g:trans_save_history = 0"
  silent put = text
  silent put = common#history#GetListOfHistoryFiles()

  let g:trans_save_history = 1
  let text = "g:trans_save_history = 1"
  silent put = text
  silent put = common#history#GetListOfHistoryFiles()

  let g:trans_save_history = 2
  let text = "g:trans_save_history = 2"
  let args = "en:ru"
  call common#trans#GenerateCMD(args)
  let source = "Hello"
  let translation = "Здравствуйте"
  call common#history#AddTranslationToHistory(source, translation)
  let args = "de:ru"
  call common#trans#GenerateCMD(args)
  let source = "Hallo"
  let translation = "Здравствуйте"
  call common#history#AddTranslationToHistory(source, translation)
  silent put = text
  silent put = common#history#GetListOfHistoryFiles()

  let g:trans_save_history = 3
  let text = "g:trans_save_history = 3"
  let args = "en:ru"
  call common#trans#GenerateCMD(args)
  let source = "Hello"
  let translation = "Здравствуйте"
  call common#history#AddTranslationToHistory(source, translation)
  let args = "de:ru"
  call common#trans#GenerateCMD(args)
  let source = "Hallo"
  let translation = "Здравствуйте"
  call common#history#AddTranslationToHistory(source, translation)
  let args = "de:en"
  call common#trans#GenerateCMD(args)
  let source = "Hallo"
  let translation = "Hello"
  call common#history#AddTranslationToHistory(source, translation)
  silent put = text
  silent put = common#history#GetListOfHistoryFiles()

Expect text:

  g:trans_save_history = 0

  g:trans_save_history = 1
  /tmp/trans-get-list-of-files.csv
  g:trans_save_history = 2
  /tmp/trans-get-list-of-files_de.csv
  /tmp/trans-get-list-of-files_en.csv
  g:trans_save_history = 3
  /tmp/trans-get-list-of-files_de_en.csv
  /tmp/trans-get-list-of-files_de_ru.csv
  /tmp/trans-get-list-of-files_en_ru.csv

Execute (AddTranslationToOpenHistoryFile: Check add functionality if file was open):
  let file = '/tmp/trans-add-translation-to-history-and-open.csv'
  call delete(file)
  " Check when history_list is empty
  call common#window#OpenTransHistoryWindow()
  let g:trans_history_file = file
  let g:trans_save_only_unique = 1
  let g:trans_save_history = 1
  let source = "Hello"
  let translation = "Здравствуйте"

  Log "AddTranslationToOpenHistoryFile: Add translation: '".source."' -> '".translation."' to file"
  let ret = common#history#AddTranslationToHistory(source, translation)
  AssertEqual file, ret

  let source = "Hi"
  let translation = "Привет"
  Log "AddTranslationToOpenHistoryFile: Add translation: '".source."' -> '".translation."' to file"
  let ret = common#history#AddTranslationToHistory(source, translation)
  AssertEqual file, ret

  Log "AddTranslationToOpenHistoryFile: Open History file and close it"
  call common#window#OpenTransHistoryWindow()
  quit

  let source = "Close"
  let translation = "Закрыть"
  Log "AddTranslationToOpenHistoryFile: Add translation: '".source."' -> '".translation."' to file"
  let ret = common#history#AddTranslationToHistory(source, translation)
  AssertEqual file, ret

  Log "AddTranslationToOpenHistoryFile: Open History file"
  call common#window#OpenTransHistoryWindow()

Expect text:
  Hello;Здравствуйте
  Hi;Привет
  Close;Закрыть

Execute (AddTranslationToOpenHistoryFile: Check add functionality if file was open and set hidden):
  set hidden
  let file = '/tmp/trans-add-translation-to-history-and-open.csv'
  call delete(file)
  let g:trans_history_file = file
  let g:trans_save_only_unique = 1
  let g:trans_save_history = 1
  let source = "Hello"
  let translation = "Здравствуйте"

  Log "AddTranslationToOpenHistoryFile: Add translation: '".source."' -> '".translation."' to file"
  let ret = common#history#AddTranslationToHistory(source, translation)
  AssertEqual file, ret

  let source = "Hi"
  let translation = "Привет"
  Log "AddTranslationToOpenHistoryFile: Add translation: '".source."' -> '".translation."' to file"
  let ret = common#history#AddTranslationToHistory(source, translation)
  AssertEqual file, ret

  Log "AddTranslationToOpenHistoryFile: Open History file and close it"
  call common#window#OpenTransHistoryWindow()
  quit

  let source = "Close"
  let translation = "Закрыть"
  Log "AddTranslationToOpenHistoryFile: Add translation: '".source."' -> '".translation."' to file"
  let ret = common#history#AddTranslationToHistory(source, translation)
  AssertEqual file, ret

  Log "AddTranslationToOpenHistoryFile: Open History file"
  call common#window#OpenTransHistoryWindow()

Expect text:
  Hello;Здравствуйте
  Hi;Привет
  Close;Закрыть

Execute (AddTranslationToOpenHistoryFile: Check add functionality if file was open and on the screen):
  let file = '/tmp/trans-add-translation-to-history-and-open.csv'
  call delete(file)
  let g:trans_history_file = file
  let g:trans_save_only_unique = 1
  let g:trans_save_history = 1
  let source = "Hello"
  let translation = "Здравствуйте"

  Log "AddTranslationToOpenHistoryFile: Add translation: '".source."' -> '".translation."' to file"
  let ret = common#history#AddTranslationToHistory(source, translation)
  AssertEqual file, ret

  let source = "Hi"
  let translation = "Привет"
  Log "AddTranslationToOpenHistoryFile: Add translation: '".source."' -> '".translation."' to file"
  let ret = common#history#AddTranslationToHistory(source, translation)
  AssertEqual file, ret

  Log "AddTranslationToOpenHistoryFile: Open History file"
  call common#window#OpenTransHistoryWindow()

  let source = "Close"
  let translation = "Закрыть"
  Log "AddTranslationToOpenHistoryFile: Add translation: '".source."' -> '".translation."' to file"
  let ret = common#history#AddTranslationToHistory(source, translation)
  AssertEqual file, ret

Expect text:
  Hello;Здравствуйте
  Hi;Привет
  Close;Закрыть

Execute (AddTranslationToOpenHistoryFile: Check append functionality if file was open):
  let file = '/tmp/trans-add-translation-to-history-and-open.csv'
  call delete(file)
  let g:trans_history_file = file
  let g:trans_save_only_unique = 2
  let g:trans_save_history = 1
  let source = "Hello"
  let translation = "Здравствуйте"

  Log "AddTranslationToOpenHistoryFile: Add translation: '".source."' -> '".translation."' to file"
  let ret = common#history#AddTranslationToHistory(source, translation)
  AssertEqual file, ret

  let source = "Hi"
  let translation = "Привет"
  Log "AddTranslationToOpenHistoryFile: Add translation: '".source."' -> '".translation."' to file"
  let ret = common#history#AddTranslationToHistory(source, translation)
  AssertEqual file, ret

  Log "AddTranslationToOpenHistoryFile: Open History file and close it"
  call common#window#OpenTransHistoryWindow()
  quit

  let source = "Hello"
  let translation = "Привет"
  Log "AddTranslationToOpenHistoryFile: Add translation: '".source."' -> '".translation."' to file"
  let ret = common#history#AddTranslationToHistory(source, translation)
  AssertEqual file, ret
  Log "AddTranslationToOpenHistoryFile: Add translation: '".source."' -> '".translation."' to file"
  let ret = common#history#AddTranslationToHistory(source, translation)
  AssertEqual file, ret

  Log "AddTranslationToOpenHistoryFile: Open History file"
  call common#window#OpenTransHistoryWindow()

Expect text:
  Hello;Здравствуйте, Привет
  Hi;Привет

Execute (AddTranslationToOpenHistoryFile: Check append functionality if file was open and set hidden):
  set hidden
  let file = '/tmp/trans-add-translation-to-history-and-open.csv'
  call delete(file)
  let g:trans_history_file = file
  let g:trans_save_only_unique = 2
  let g:trans_save_history = 1
  let source = "Hello"
  let translation = "Здравствуйте"

  Log "AddTranslationToOpenHistoryFile: Add translation: '".source."' -> '".translation."' to file"
  let ret = common#history#AddTranslationToHistory(source, translation)
  AssertEqual file, ret

  let source = "Hi"
  let translation = "Привет"
  Log "AddTranslationToOpenHistoryFile: Add translation: '".source."' -> '".translation."' to file"
  let ret = common#history#AddTranslationToHistory(source, translation)
  AssertEqual file, ret

  Log "AddTranslationToOpenHistoryFile: Open History file and close it"
  call common#window#OpenTransHistoryWindow()
  quit

  let source = "Hello"
  let translation = "Привет"
  Log "AddTranslationToOpenHistoryFile: Add translation: '".source."' -> '".translation."' to file"
  let ret = common#history#AddTranslationToHistory(source, translation)
  AssertEqual file, ret

  Log "AddTranslationToOpenHistoryFile: Add translation: '".source."' -> '".translation."' to file"
  let ret = common#history#AddTranslationToHistory(source, translation)
  AssertEqual file, ret

  Log "AddTranslationToOpenHistoryFile: Open History file"
  call common#window#OpenTransHistoryWindow()

Expect text:
  Hello;Здравствуйте, Привет
  Hi;Привет

Execute (AddTranslationToOpenHistoryFile: Check append functionality if file was open and on the screen):
  let file = '/tmp/trans-add-translation-to-history-and-open.csv'
  call delete(file)
  let g:trans_history_file = file
  let g:trans_save_only_unique = 2
  let g:trans_save_history = 1
  let source = "Hello"
  let translation = "Здравствуйте"

  Log "AddTranslationToOpenHistoryFile: Add translation: '".source."' -> '".translation."' to file"
  let ret = common#history#AddTranslationToHistory(source, translation)
  AssertEqual file, ret

  let source = "Hi"
  let translation = "Привет"
  Log "AddTranslationToOpenHistoryFile: Add translation: '".source."' -> '".translation."' to file"
  let ret = common#history#AddTranslationToHistory(source, translation)
  AssertEqual file, ret

  Log "AddTranslationToOpenHistoryFile: Open History file"
  call common#window#OpenTransHistoryWindow()

  let source = "Hello"
  let translation = "Привет"
  Log "AddTranslationToOpenHistoryFile: Add translation: '".source."' -> '".translation."' to file"
  let ret = common#history#AddTranslationToHistory(source, translation)
  AssertEqual file, ret
  Log "AddTranslationToOpenHistoryFile: Add translation: '".source."' -> '".translation."' to file"
  let ret = common#history#AddTranslationToHistory(source, translation)
  AssertEqual file, ret

Expect text:
  Hello;Здравствуйте, Привет
  Hi;Привет

Execute (common#history#AddTranslationToHistory: Check add functionality):
  let file = '/tmp/trans-add-different-words.csv'
  call delete(file)
  let g:trans_history_file = file
  let g:trans_save_history = 1
  let g:trans_save_only_unique = 2
  let source = "niemanden"
  let translation = "кто-нибудь"

  Log "common#history#AddTranslationToHistory: Add translation: '".source."' -> '".translation."' to file"
  let ret = common#history#AddTranslationToHistory(source, translation)
  AssertEqual file, ret

  let source = "niemand"
  let translation = "никто"
  Log "common#history#AddTranslationToHistory: Add translation: '".source."' -> '".translation."' to file"
  let ret = common#history#AddTranslationToHistory(source, translation)
  AssertEqual file, ret

  execute 'edit' file

Expect text:
  niemanden;кто-нибудь
  niemand;никто

Given text:
  Hello beautiful world!

Do (common#history#SaveSelectedTranslation: Check add functionality):
  :let file = '/tmp/trans-save-selected-translation.csv'\<CR>
  :call delete(file)\<CR>
  :let g:trans_save_history = 1\<CR>
  :let g:trans_close_window_after_saving = 1\<CR>
  :let g:trans_history_file = file\<CR>
  /bea\<CR>
  :let g:trans_default_direction = ":ru"\<CR>
  :Trans\<CR>
  /\Cпрекрасный\<CR>
  \<CR>
  /world\<CR>
  :Trans\<CR>
  /\Cмир\<CR>
  \<CR>
  :TransOpenHistoryWindow\<CR>

Expect text:
  beautiful;прекрасный
  world;мир

